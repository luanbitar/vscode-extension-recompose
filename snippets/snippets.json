{
  "lg": {
    "prefix": "lg",
    "body": [
      "console.log($CLIPBOARD)"
    ],
    "description": "Console log shorthand"
	},
	"imr": {
		"prefix": "imr",
		"body": [
			"import React from 'react'",
      ""
		],
		"description": "React default import"
	},
  "dumb": {
    "prefix": "dumb",
    "body": [
			"function ${TM_DIRECTORY/.*[\\/](.*)$$/$1/}() {",
			"\t",
			"\treturn (",
			"\t\t$0",
			"\t)",
      "}",
      "export default ${TM_DIRECTORY/.*[\\/](.*)$$/$1/}"
    ],
    "description": "React dumb component based on parent's folder"
  },
  "filedumb": {
    "prefix": "filedumb",
    "body": [
			"function $TM_FILENAME_BASE() {",
			"\t",
			"\treturn (",
			"\t\t$0",
			"\t)",
      "}",
      "export default $TM_FILENAME_BASE"
    ],
    "description": "React dumb component based on filename"
  },
  "compose": {
    "prefix": "compose",
    "body": [
      "import compose from 'recompose/compose'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\t$0",
      ")"
    ],
    "description": "Enhancer skeleton"
  },
  "datarecompose": {
    "prefix": "datarecompose",
    "body": [
      "import compose from 'recompose/compose'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "import { connect } from 'react-redux'",
      "",
      "const mapStateToProps = (state) => {",
			"\treturn {",
			"\t\t$1: state.$1",
			"\t}",
			"}",
      "",
      "const mapDispatchToProps = dispatch => ({",
      "\t$2: ($3) => dispatch($2($3))",
      "})",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\tconnect(mapStateToProps, mapDispatchToProps),",
      "\t$0",
      ")"
    ],
    "description": "Recompose data layer"
  },
  "staterecompose": {
    "prefix": "staterecompose",
    "body": [
			"import withState from 'recompose/withState'",
      "import compose from 'recompose/compose'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\twithState('$1', 'set$1', $2),",
      "\t$0",
      ")"
    ],
    "description": "Recompose state layer"
  },
  "wstaterecompose": {
    "prefix": "wstaterecompose",
    "body": [
      "withState('$1', 'set$1', $2),",
      "$0"
    ],
    "description": "withState shorthand"
  },
  "handlersrecompose": {
    "prefix": "handlersrecompose",
    "body": [
      "import compose from 'recompose/compose'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "import withHandlers from 'recompose/withHandlers'",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\twithHandlers({",
      "\t\ton$1: ({ $2 }) => ($3) => {",
      "\t\t\t$0",
      "\t\t},",
      "\t})",
      ")"
    ],
    "description": "Recompose handler layer"
  },
  "whandlerrecompose": {
    "prefix": "whandlerrecompose",
    "body": [
      "on$1: ({ $2 }) => ($3) => {",
      "\t$0",
      "},"
    ],
    "description": "withHandler shorthand"
  },
  "hooksrecompose": {
    "prefix": "hooksrecompose",
    "body": [
      "import compose from 'recompose/compose'",
      "import lifecycle from 'recompose/lifecycle'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\tlifecycle({",
      "\t\t$0",
      "\t})",
      ")"
    ],
    "description": "Recompose hooks layer"
  },
  "componentDidMount": {
    "prefix": "cdm",
    "body": [
      "componentDidMount() {",
      "\t$0",
      "},"
    ],
    "description": "componentDidMount"
  },
  "componentDidUpdate": {
    "prefix": "cdu",
    "body": [
      "componentDidUpdate(prevProps, prevState) {",
      "\t$0",
      "},"
    ],
    "description": "componentDidUpdate"
  },
  "shouldComponentUpdate": {
    "prefix": "scu",
    "body": [
      "shouldComponentUpdate(nextProps, nextState) {",
      "\t$0",
      "},"
    ],
    "description": "shouldComponentUpdate"
  },
  "componentWillUnmount": {
    "prefix": "cwu",
    "body": [
      "componentWillUnmount() {",
      "\t$0",
      "},"
    ],
    "description": "componentWillUnmount"
  },
  "propsmapperrecompose": {
    "prefix": "propsmapperrecompose",
    "body": [
      "import compose from 'recompose/compose'",
      "import mapProps from 'recompose/mapProps'",
      "import setDisplayName from 'recompose/setDisplayName'",
      "",
      "export default compose(",
      "\tsetDisplayName('/src/enhancers/${TM_FILEPATH/.*[\\/](.*[\\/].*)$$/$1/}'),",
      "\tmapProps(({ $1, ...rest }) => {",
      "\t\t$0",
      "\t\t",
      "\t\treturn {",
      "\t\t\t",
      "\t\t\t...rest",
      "\t\t}",
      "\t})",
      ")"
    ],
    "description": "Recompose Props Mapper layer"
  }
}
